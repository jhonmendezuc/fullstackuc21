/*DDL - LENGUAJE DE DEFINICION DE DATOS CRUD (BASES DE DATOS Y TABLAS)*/

CREATE TABLE USERS(
  ID_USUARIO SERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(50),
  EMAIL VARCHAR(100) UNIQUE NOT NULL,
  PASSWORD VARCHAR(20) NOT NULL,
  AGE INTEGER
);

CREATE TABLE TASKS(
  ID_TASK SERIAL PRIMARY KEY NOT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION TEXT,
  STATE BOOLEAN,
  ID_USUARIO INTEGER,
  FOREIGN KEY (ID_USUARIO) REFERENCES USERS(ID_USUARIO)
);

/*DML - LENGUAJE DE MANIPULACION DE DATOS (CRUD - REGISTROS)
C - INSERT
R - SELECT
U - UPDATE
D - DELETE
*/

INSERT INTO USERS(NAME,EMAIL,PASSWORD,AGE) VALUES
('farid','farid@gmail.com','555',25);

SELECT * FROM USERS;


/*INSERT TASK*/
INSERT INTO TASKS(NAME, STATE, ID_USUARIO) 
VALUES ('Tarea 2', false, 1);

SELECT * FROM



 /*PL-SQL. -TRIGGERS, FUNCIONES, PROCEDIMIENTOS ALMACENADOS, CURSORES*/
 /*TRIGGER VALIAR EDAD*/

CREATE OR REPLACE FUNCTION validar_edad()
RETURNS TRIGGER AS $$
BEGIN
  IF NEW.age < 18 THEN
    RAISE EXCEPTION 'Edad invÃ¡lida: solo se permiten mayores de edad';
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER validar_edad
BEFORE INSERT ON USERS
FOR EACH ROW
EXECUTE FUNCTION validar_edad();